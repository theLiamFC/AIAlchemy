
{
    "pin":"from machine import Pin\ndigital_out = Pin(12, Pin.OUT)\ndigital_in = Pin(11, Pin.IN)\nsignal = digital_in.value()\ndigital_out.on()\ndigital_out.off()",
    "bluetooth":"import bluetooth\nimport time\nimport struct\n\nNAME_FLAG = 0x09\n\nclass Yell:\n    def __init__(self):\n        self._ble = bluetooth.BLE()\n        self._ble.active(True)\n        \n    def advertise(self, name = 'lkjh', interval_us=100000):\n        short = name[:8]\n        payload = struct.pack(\"BB\", len(short) + 1, NAME_FLAG) + name[:8]  # byte length, byte type, value\n        self._ble.gap_advertise(interval_us, adv_data=payload)\n        \n    def stop_advertising(self):\n        self._ble.gap_advertise(None)\n\np = Yell()\nwave = 1 # or 0 \np.advertise(\"fred:\" + str(wave))\ntime.sleep(2)\n\n\np.stop_advertising()",
    "led":"from machine import Pin\nled = Pin(25, Pin.OUT)\nled.toggle()"
}
